# check for convergence
if (abs(likelihood_updated - likelihood_previous) < stopping_value*(abs(likelihood_updated) + abs(likelihood_previous))) break
# keep track values after each iteration
updated_table <- data.frame(rbind(updated_table, c(k, pi_new, likelihood_updated)))
# update values to iterate between E and M steps until convergence
likelihood_previous <- likelihood_updated
pi_start <- pi_new
k <- k + 1
}
# return table of results
if (track == TRUE) {
names(updated_table) <- c("iteration", "pi_a", "pi_b", "pi_o", "likelihood")
updated_table
}
else {
c(iteration = k, pi_a = pi_start[1], pi_b = pi_start[2], pi_o = pi_start[3], likelihood = likelihood_previous)
}
}
# apply EM function to Clarke data, tracing the progress
# starting pi values
pi_guess <- c(1/3, 1/3, 1/3)
# apply EM function
clarke_EM <- EM_iteration(Y = pheno_counts, pi_start = pi_guess, stopping_value = 1e-20, track = TRUE)
clarke_EM
ggplot(data = test, aes(x = pi_a, y = pi_o, z = value)) +
stat_contour() +
labs(title = "Log Likelihood Surface")
# TO DO: ERRORS / FIX!!!!
# contour plot of likelihood surface
test <- melt(pi_likelihood, id.vars=c("pi_a", "pi_b", "pi_o"), measure.vars="all_likelihood")
ggplot(data = test, aes(x = pi_a, y = pi_o, z = value)) +
stat_contour() +
labs(title = "Log Likelihood Surface")
ggplot(data = test, aes(x = pi_a, y = pi_b, z = value)) +
stat_contour() +
labs(title = "Log Likelihood Surface")
ggplot(data = test, aes(x = pi_o, y = pi_b, z = value)) +
stat_contour() +
labs(title = "Log Likelihood Surface")
ggplot(data = test, aes(x = pi_b, y = pi_o, z = value)) +
stat_contour() +
labs(title = "Log Likelihood Surface")
teams <- c("Warriors", "Lakers", "Kings")
ppg   <- c(116.6, 116.7, 113.9)
opg   <- c(110.4, 115.4, 116.1)
rbind(ppg, opg)
table <- rbind(ppg, opg)
row.names(table)
table
colnames(table) <- teams
table
parcel_weight     <- c(5, 4, 5, 7, 15, 50, 3, 4, 45, 1, 1, 3, 3, 2, 2, 30, 20, 20, 25, 1, 3, 3, 3)
shipping_statuses <- c("priority", "economy", "economy")
cbind(parcel_weight, shipping_statuses)
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 1, 1, 3, 3, 2, 2, 30, 20, 20, 25, 1, 3, 3, 3, 10)
shipping_statuses <- c("priority", "economy", "economy")
cbind(parcel_weight, shipping_statuses)
data.frame(cbind(parcel_weight, shipping_statuses))
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping_statuses <- c("priority", "economy", "economy")
data.frame(cbind(parcel_weight, shipping_statuses))
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping_statuses <- c("priority", "economy", "economy")
data.frame(cbind(parcel_weight, shipping_statuses))
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping_statuses <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping_statuses))
parcel_info
median(parecel_info$parcel_weight)
median(parcel_info$parcel_weight)
median(as.numeric(unlist(parcel_info$parcel_weight)))
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping_statuses <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping_statuses))
parcel_info
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(unlist(parcel_info$parcel_weight))
parcel_info
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(unlist(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
library(dplyr)
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(unlist(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
library(dplyr)
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_labels
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("present_weights", "shipping", paste0("shipping_i", 1:1000))
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:1010))
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
each_col <- 3
for (each_col in 3:1002) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("present_weights", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- c()
each_col <- 3
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("present_weights", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
all_the_means
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("present_weights", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("present_weights", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
tmp_means
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
tmp_df
names(tmp_df) <- c("present_weights", "shipping")
tmp_df
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_df
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
tmp_means
tmp_df
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
teams <- c("Warriors", "Lakers", "Kings")
ppg   <- c(116.6, 116.7, 113.9)
opg   <- c(110.4, 115.4, 116.1)
table <- rbind(ppg, opg)
colnames(table) <- teams
table
library(dplyr)
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_means
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- priority - economy
obs_means
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="firebrick3") +
geom_vline(xintercept=original_diff, col="darkgreen") +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="firebrick3") +
geom_vline(xintercept=original_diff, col="darkgreen") +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="firebrick3") +
geom_vline(xintercept=obs_diff, col="darkgreen") +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
library(dplyr)
parcel_weight     <- c(1, 4, 5, 7, 25, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
library(dplyr)
parcel_weight     <- c(1, 40, 5, 7, 25, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
load("../Images/counties.sav")
library(ggrepel)
# Your code goes here.
# Solution
ggplot(counties %>% filter(state == "CA"), aes(x = pop.density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county))
# Your code here.
library(ggplot2)
library(dplyr)
# Solution
ggplot(counties %>% filter(state == "CA"), aes(x = pop.density, y = democrat)) +
geom_point()
library(ggrepel)
# Your code goes here.
# Solution
ggplot(counties %>% filter(state == "CA"), aes(x = pop.density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county))
counties %>% filter(state == "CA")
counties %>% filter(state == "CA")
counties %>% filter(state == "CA") %>% mutate(log.pop=log(pop.density))
# Your code goes here.
# Solution
counties_CA <- counties %>% filter(state == "CA") %>%
mutate(log_pop_density = log(pop.density),
log_pop2 = log_pop_density * log_pop_density)
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth() +
geom_text_repel(aes(label = county))
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth() +
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth(method="lm") +
geom_text_repel(aes(label = county))
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county)) +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth(method="lm") +
geom_text_repel(aes(label = county))
counties_CA %>% summarise(cor = cor(democrat, pop.density),
cor2 = cor(democrat, log_pop2))
counties_CA %>% summarise(cor = cor(democrat, pop.density),
cor2 = cor(democrat, log_pop2))
counties_CA %>% summarise(r = cor(democrat, pop.density),
r_2 = cor(democrat, log_pop2),
r2_1 = cor(democrat, pop.density)^2,
r2_2 = cor(democrat, log_pop2)^2)
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county)) +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth(method="lm") +
geom_text_repel(aes(label = county))
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county)) +
geom_smooth()
# Your code here.
# Solution
lm_CA <- lm(formula = democrat ~ log_pop_density, data = counties_CA)
library(broom)
library(tidyr)
tidy(lm_CA)
glance(lm_CA)
#Your code goes here.
#Solution
CA_augment <- augment(lm_CA)
# scatter plot
ggplot(CA_augment, aes(y = democrat, x = log_pop_density)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
geom_segment(aes(xend = log_pop_density, yend = .fitted), lty = 2) +
theme_minimal(base_size = 15) +
labs(title = "(a) Scatter plot")
# QQ plot
ggplot(CA_augment, aes(sample = .resid)) +
geom_qq() +
geom_qq_line() +
theme_minimal(base_size = 15) +
labs(y = "Residuals", x = "Theoretical quantiles", title = "(b) QQplot")
## Fitted vs. residuals
ggplot(CA_augment, aes(y = .resid, x = .fitted)) +
geom_point() +
theme_minimal(base_size = 15) +
geom_hline(aes(yintercept = 0)) +
labs(y = "Residuals", x = "Fitted values", title = "(c) Fitted vs. residuals")
## Amount explained
bolt_gather <- CA_augment %>% select(democrat, .resid) %>%
gather(key = "type", value = "value", democrat, .resid)
ggplot(bolt_gather, aes(y = value)) +
geom_boxplot(aes(fill = type)) +
theme_minimal(base_size = 15) +
labs(title = "(d) Amount explained")
#Solution
CA_augment <- augment(lm_CA)
CA_augment
#Your code goes here.
#Solution
CA_augment <- augment(lm_CA)
# scatter plot
ggplot(CA_augment, aes(y = democrat, x = log_pop_density)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
geom_segment(aes(xend = log_pop_density, yend = .fitted), lty = 2) +
theme_minimal(base_size = 15) +
labs(title = "(a) Scatter plot")
# QQ plot
ggplot(CA_augment, aes(sample = .resid)) +
geom_qq() +
geom_qq_line() +
theme_minimal(base_size = 15) +
labs(y = "Residuals", x = "Theoretical quantiles", title = "(b) QQplot")
## Fitted vs. residuals
ggplot(CA_augment, aes(y = .resid, x = .fitted)) +
geom_point() +
theme_minimal(base_size = 15) +
geom_hline(aes(yintercept = 0)) +
labs(y = "Residuals", x = "Fitted values", title = "(c) Fitted vs. residuals")
## Amount explained
bolt_gather <- CA_augment %>% select(democrat, .resid) %>%
gather(key = "type", value = "value", democrat, .resid)
ggplot(bolt_gather, aes(y = value)) +
geom_boxplot(aes(fill = type)) +
theme_minimal(base_size = 15) +
labs(title = "(d) Amount explained")
counties %>% filter(state == "CA")
??gather
?gather
ggplot(counties %>% filter(state == "CA"), aes(x=crime, y=democrat))
ggplot(counties %>% filter(state == "CA"), aes(x=crime, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=college, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=white, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=black, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=farm, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=age6574, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=age75, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=income, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=college, y=democrat)) +
geom_point()
setwd("~/GitHub/endometriosis/code/espejo")
full_data <- read.csv("../../data/genbank/clean-csv/endometriosis.csv")
