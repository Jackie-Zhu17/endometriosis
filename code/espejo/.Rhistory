all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("present_weights", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
tmp_means
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
tmp_df
names(tmp_df) <- c("present_weights", "shipping")
tmp_df
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_df
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
tmp_means
tmp_df
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
teams <- c("Warriors", "Lakers", "Kings")
ppg   <- c(116.6, 116.7, 113.9)
opg   <- c(110.4, 115.4, 116.1)
table <- rbind(ppg, opg)
colnames(table) <- teams
table
library(dplyr)
parcel_weight     <- c(1, 4, 5, 7, 15, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means)
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_means
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- priority - economy
obs_means
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="firebrick3") +
geom_vline(xintercept=original_diff, col="darkgreen") +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="firebrick3") +
geom_vline(xintercept=original_diff, col="darkgreen") +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="firebrick3") +
geom_vline(xintercept=obs_diff, col="darkgreen") +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
library(dplyr)
parcel_weight     <- c(1, 4, 5, 7, 25, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
library(dplyr)
parcel_weight     <- c(1, 40, 5, 7, 25, 50, 3, 4, 45, 10)
shipping <- c("priority", "economy", "economy")
parcel_info       <- data.frame(cbind(parcel_weight, shipping))
parcel_info$parcel_weight <- as.numeric(as.character(parcel_info$parcel_weight))
parcel_info %>% arrange(shipping)
new_labels <- lapply(1:999, function(x) sample(parcel_info$shipping, nrow(parcel_info), replace=TRUE))
new_lab_df <- cbind(parcel_info, new_labels)
names(new_lab_df) <- c("parcel_weight", "shipping", paste0("shipping_i", 1:999))
head(new_lab_df[,c(1:5)])
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
all_the_means <- c()
for (each_col in 3:1001) {
tmp_df <- data.frame(cbind(new_lab_df %>% pull(parcel_weight), new_lab_df[,each_col]))
names(tmp_df) <- c("parcel_weight", "shipping")
tmp_df$shipping <- ifelse(tmp_df$shipping==1, "priority", "economy")
tmp_means <- tmp_df %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
all_the_means <- rbind(all_the_means, tmp_means$mean)
}
all_the_means <- data.frame(all_the_means)
names(all_the_means) <- c("priority", "economy")
all_the_means <- all_the_means %>% mutate(mean_difference=priority-economy)
head(all_the_means, 10)
library(ggplot2)
obs_means <- parcel_info %>% group_by(shipping) %>% summarize(mean=mean(parcel_weight))
obs_diff  <- 20.50 - 5.25
ggplot(all_the_means, aes(x=mean_difference)) +
geom_histogram(bins=40, col="white", size=0.25, fill="lightgrey") +
geom_vline(xintercept=obs_diff) +
xlab("difference in sample means") +
ggtitle("Histogram of Sample Mean Differences") +
theme_bw()
c(prob_below_value=length(which(all_the_means %>% pull(mean_difference) < obs_diff)) / nrow(all_the_means), prob_above_value=length(which(all_the_means %>% pull(mean_difference) > obs_diff)) / nrow(all_the_means))
load("../Images/counties.sav")
library(ggrepel)
# Your code goes here.
# Solution
ggplot(counties %>% filter(state == "CA"), aes(x = pop.density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county))
# Your code here.
library(ggplot2)
library(dplyr)
# Solution
ggplot(counties %>% filter(state == "CA"), aes(x = pop.density, y = democrat)) +
geom_point()
library(ggrepel)
# Your code goes here.
# Solution
ggplot(counties %>% filter(state == "CA"), aes(x = pop.density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county))
counties %>% filter(state == "CA")
counties %>% filter(state == "CA")
counties %>% filter(state == "CA") %>% mutate(log.pop=log(pop.density))
# Your code goes here.
# Solution
counties_CA <- counties %>% filter(state == "CA") %>%
mutate(log_pop_density = log(pop.density),
log_pop2 = log_pop_density * log_pop_density)
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth() +
geom_text_repel(aes(label = county))
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth() +
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth(method="lm") +
geom_text_repel(aes(label = county))
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county)) +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth(method="lm") +
geom_text_repel(aes(label = county))
counties_CA %>% summarise(cor = cor(democrat, pop.density),
cor2 = cor(democrat, log_pop2))
counties_CA %>% summarise(cor = cor(democrat, pop.density),
cor2 = cor(democrat, log_pop2))
counties_CA %>% summarise(r = cor(democrat, pop.density),
r_2 = cor(democrat, log_pop2),
r2_1 = cor(democrat, pop.density)^2,
r2_2 = cor(democrat, log_pop2)^2)
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county)) +
geom_smooth()
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_smooth(method="lm") +
geom_text_repel(aes(label = county))
ggplot(counties_CA, aes(x = log_pop_density, y = democrat)) +
geom_point() +
geom_text_repel(aes(label = county)) +
geom_smooth()
# Your code here.
# Solution
lm_CA <- lm(formula = democrat ~ log_pop_density, data = counties_CA)
library(broom)
library(tidyr)
tidy(lm_CA)
glance(lm_CA)
#Your code goes here.
#Solution
CA_augment <- augment(lm_CA)
# scatter plot
ggplot(CA_augment, aes(y = democrat, x = log_pop_density)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
geom_segment(aes(xend = log_pop_density, yend = .fitted), lty = 2) +
theme_minimal(base_size = 15) +
labs(title = "(a) Scatter plot")
# QQ plot
ggplot(CA_augment, aes(sample = .resid)) +
geom_qq() +
geom_qq_line() +
theme_minimal(base_size = 15) +
labs(y = "Residuals", x = "Theoretical quantiles", title = "(b) QQplot")
## Fitted vs. residuals
ggplot(CA_augment, aes(y = .resid, x = .fitted)) +
geom_point() +
theme_minimal(base_size = 15) +
geom_hline(aes(yintercept = 0)) +
labs(y = "Residuals", x = "Fitted values", title = "(c) Fitted vs. residuals")
## Amount explained
bolt_gather <- CA_augment %>% select(democrat, .resid) %>%
gather(key = "type", value = "value", democrat, .resid)
ggplot(bolt_gather, aes(y = value)) +
geom_boxplot(aes(fill = type)) +
theme_minimal(base_size = 15) +
labs(title = "(d) Amount explained")
#Solution
CA_augment <- augment(lm_CA)
CA_augment
#Your code goes here.
#Solution
CA_augment <- augment(lm_CA)
# scatter plot
ggplot(CA_augment, aes(y = democrat, x = log_pop_density)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
geom_segment(aes(xend = log_pop_density, yend = .fitted), lty = 2) +
theme_minimal(base_size = 15) +
labs(title = "(a) Scatter plot")
# QQ plot
ggplot(CA_augment, aes(sample = .resid)) +
geom_qq() +
geom_qq_line() +
theme_minimal(base_size = 15) +
labs(y = "Residuals", x = "Theoretical quantiles", title = "(b) QQplot")
## Fitted vs. residuals
ggplot(CA_augment, aes(y = .resid, x = .fitted)) +
geom_point() +
theme_minimal(base_size = 15) +
geom_hline(aes(yintercept = 0)) +
labs(y = "Residuals", x = "Fitted values", title = "(c) Fitted vs. residuals")
## Amount explained
bolt_gather <- CA_augment %>% select(democrat, .resid) %>%
gather(key = "type", value = "value", democrat, .resid)
ggplot(bolt_gather, aes(y = value)) +
geom_boxplot(aes(fill = type)) +
theme_minimal(base_size = 15) +
labs(title = "(d) Amount explained")
counties %>% filter(state == "CA")
??gather
?gather
ggplot(counties %>% filter(state == "CA"), aes(x=crime, y=democrat))
ggplot(counties %>% filter(state == "CA"), aes(x=crime, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=college, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=white, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=black, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=farm, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=age6574, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=age75, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=income, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=college, y=democrat)) +
geom_point()
setwd("~/GitHub/endometriosis/code/espejo")
full_data <- read.csv("../../data/genbank/clean-csv/endometriosis.csv")
subset <- read.csv("../../data/genbank/clean-csv/small_subset.csv")[,-1]
colnames(subset)[-c(1:4)]
BiocManager::install("hgu133plus2.db", version = "3.8")
subset <- read.csv("../../data/genbank/removed-controls/cut_1.csv")[,-1]
subset
head(subset)
colnames(subset)[-c(1:4)]
probe_names <- colnames(subset)[-c(1:4)]
head(probe_names)
contents(hgu133plus2SYMBOL)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("hgu133plus2.db", version = "3.8")
library(hgu133plus2)
library("hgu133plus2.db")
hgu133plus2SYMBOL
SYMBOL <- data.frame(SYMBOL=sapply(contents(hgu133plus2SYMBOL), paste, collapse=", ") )
SYMBOL
contents(hgu133plus2SYMBOL)
do.call(rbind(contents(hgu133plus2SYMBOL)))
contents(hgu133plus2SYMBOL)
names(hgu133plus2SYMBOL)
hgu133plus2SYMBOL
names(hgu133plus2SYMBOL)
names(contents(hgu133plus2SYMBOL))
cbind, names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL)))
cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL)))
data.frame(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
dataframe(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
matrix(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
as.matrix(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
data.frame(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
test <- data.frame(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
View(test)
index(test)
rownames(test) <- 1:nrow(test)
probe_names[1]
which(test[,1]==probe_names[1])
probe_names[1]
test[,1]
unique(test[,1])
probe_names[1]
probe_names
gsub("^X", "", probe_names)
probe_names <- gsub("^X", "", probe_names)
which(test[,1]==probe_names[1])
test[,1]
test[1,1]
indices <- lapply(probe_names, function(x) which(test[,1]==x))
indices
cbind(probe_names, indices)
cbind(probe_names, test[indices,2])
test
indices <- sapply(probe_names, function(x) which(test[,1]==x))
indices <- sapply(probe_names, function(x) which(test[,1]==x))
cbind(probe_names, test[indices,2])
probe_to_gene <- cbind(probe_names, test[indices,2])
View(probe_to_gene)
probe_to_gene <- cbind(probe_names, test[indices,2])
names(probe_to_gene)
names(probe_to_gene) <- c("probe", "gene")
probe_to_gene <- data.frame(cbind(probe_names, test[indices,2]))
names(probe_to_gene) <- c("probe", "gene")
View(probe_to_gene)
indices
test[indices,2]
probe_to_gene <- data.frame(cbind(probe_names, unlist(test[,2])[indices]))
names(probe_to_gene) <- c("probe", "gene")
test[,2]
test[,2] <- as.character(test[,2])
indices <- sapply(probe_names, function(x) which(test[,1]==x))
indices <- sapply(probe_names, function(x) which(test[,1]==x))
probe_to_gene <- data.frame(cbind(probe_names, unlist(test[,2])[indices]))
names(probe_to_gene) <- c("probe", "gene")
dim(probe_to_gene)
unique(probe_to_gene[,2])
as.character(unique(probe_to_gene[,2]))
length(as.character(unique(probe_to_gene[,2])))
dim(probe_to_gene)
length(as.character(unique(probe_to_gene[,2])))
length(as.character(unique(probe_to_gene[,2]))) - dim(probe_to_gene)[1]
abs(length(as.character(unique(probe_to_gene[,2]))) - dim(probe_to_gene)[1])
abs(length(as.character(unique(probe_to_gene[,2]))) - dim(probe_to_gene)[1])
table(probe_to_gene)
table(probe_to_gene[,2])
which(table(probe_to_gene[,2])>1)
names(which(table(probe_to_gene[,2])>1))
duplicate_genes <- names(which(table(probe_to_gene[,2])>1))
duplicate_genes
probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),]
library(dplyr)
probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),] %>% arrange(gene)
the_duplicate_rows <- probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),] %>% arrange(gene)
head(the_duplicate_rows)
the_duplicate_rows <- probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),] %>% arrange(gene)
head(the_duplicate_rows)
duplicate_genes <- names(which(table(probe_to_gene[,2])>1))
duplicate_genes
the_duplicate_rows
View(the_duplicate_rows)
table(the_duplicate_rows[,2])
table(the_duplicate_rows$gene)
table(as.character(the_duplicate_rows$gene))
the_duplicate_rows[,1]
as.character(the_duplicate_rows[,1])
which(names(subset) %in% as.character(the_duplicate_rows[,1]))
names(subset)
which(probe_names %in% as.character(the_duplicate_rows[,1]))
which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
col_ix <- which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
col_ix
# col_ix <- which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
# col_ix
unique(the_duplicate_rows[,1])[1]
k <- 1
as.character(unique(the_duplicate_rows[,1])[k])
as.character(unique(the_duplicate_rows[,2])[k])
which(probe_names == as.character(unique(the_duplicate_rows[,2])[k]))
k_gene <- as.character(unique(the_duplicate_rows[,2])[k])
k_gene
which(probe_names == k_gene)
probe_names
which(the_duplicate_rows[,2] == k_gene)
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),]
which(the_duplicate_rows[,2] == k_gene)
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),]
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1]
unlist(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1])
as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1])
as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene), 1])
k_probes <- as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene), 1])
which(probe_names %in% k_probes)
k_cols <- which(probe_names %in% k_probes)
k_cols <- which(probe_names %in% k_probes) + 4
subset[,k_cols]
subset[,k_cols] %>% mutate(difference=X1557418_at-X1557419_a_at)
subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2)
subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2,
diff=X1557419_a_at-X1557418_at)
compare <- subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2,
diff=X1557419_a_at-X1557418_at)
compare
compare$diff
mean(compare$diff)
hist(compare$diff)
