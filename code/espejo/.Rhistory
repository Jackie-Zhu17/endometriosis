## Amount explained
bolt_gather <- CA_augment %>% select(democrat, .resid) %>%
gather(key = "type", value = "value", democrat, .resid)
ggplot(bolt_gather, aes(y = value)) +
geom_boxplot(aes(fill = type)) +
theme_minimal(base_size = 15) +
labs(title = "(d) Amount explained")
#Solution
CA_augment <- augment(lm_CA)
CA_augment
#Your code goes here.
#Solution
CA_augment <- augment(lm_CA)
# scatter plot
ggplot(CA_augment, aes(y = democrat, x = log_pop_density)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
geom_segment(aes(xend = log_pop_density, yend = .fitted), lty = 2) +
theme_minimal(base_size = 15) +
labs(title = "(a) Scatter plot")
# QQ plot
ggplot(CA_augment, aes(sample = .resid)) +
geom_qq() +
geom_qq_line() +
theme_minimal(base_size = 15) +
labs(y = "Residuals", x = "Theoretical quantiles", title = "(b) QQplot")
## Fitted vs. residuals
ggplot(CA_augment, aes(y = .resid, x = .fitted)) +
geom_point() +
theme_minimal(base_size = 15) +
geom_hline(aes(yintercept = 0)) +
labs(y = "Residuals", x = "Fitted values", title = "(c) Fitted vs. residuals")
## Amount explained
bolt_gather <- CA_augment %>% select(democrat, .resid) %>%
gather(key = "type", value = "value", democrat, .resid)
ggplot(bolt_gather, aes(y = value)) +
geom_boxplot(aes(fill = type)) +
theme_minimal(base_size = 15) +
labs(title = "(d) Amount explained")
counties %>% filter(state == "CA")
??gather
?gather
ggplot(counties %>% filter(state == "CA"), aes(x=crime, y=democrat))
ggplot(counties %>% filter(state == "CA"), aes(x=crime, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=college, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=white, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=black, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=farm, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=age6574, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=age75, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=income, y=democrat)) +
geom_point()
ggplot(counties %>% filter(state == "CA"), aes(x=college, y=democrat)) +
geom_point()
setwd("~/GitHub/endometriosis/code/espejo")
full_data <- read.csv("../../data/genbank/clean-csv/endometriosis.csv")
subset <- read.csv("../../data/genbank/clean-csv/small_subset.csv")[,-1]
colnames(subset)[-c(1:4)]
BiocManager::install("hgu133plus2.db", version = "3.8")
subset <- read.csv("../../data/genbank/removed-controls/cut_1.csv")[,-1]
subset
head(subset)
colnames(subset)[-c(1:4)]
probe_names <- colnames(subset)[-c(1:4)]
head(probe_names)
contents(hgu133plus2SYMBOL)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("hgu133plus2.db", version = "3.8")
library(hgu133plus2)
library("hgu133plus2.db")
hgu133plus2SYMBOL
SYMBOL <- data.frame(SYMBOL=sapply(contents(hgu133plus2SYMBOL), paste, collapse=", ") )
SYMBOL
contents(hgu133plus2SYMBOL)
do.call(rbind(contents(hgu133plus2SYMBOL)))
contents(hgu133plus2SYMBOL)
names(hgu133plus2SYMBOL)
hgu133plus2SYMBOL
names(hgu133plus2SYMBOL)
names(contents(hgu133plus2SYMBOL))
cbind, names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL)))
cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL)))
data.frame(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
dataframe(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
matrix(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
as.matrix(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
data.frame(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
test <- data.frame(cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL))))
View(test)
index(test)
rownames(test) <- 1:nrow(test)
probe_names[1]
which(test[,1]==probe_names[1])
probe_names[1]
test[,1]
unique(test[,1])
probe_names[1]
probe_names
gsub("^X", "", probe_names)
probe_names <- gsub("^X", "", probe_names)
which(test[,1]==probe_names[1])
test[,1]
test[1,1]
indices <- lapply(probe_names, function(x) which(test[,1]==x))
indices
cbind(probe_names, indices)
cbind(probe_names, test[indices,2])
test
indices <- sapply(probe_names, function(x) which(test[,1]==x))
indices <- sapply(probe_names, function(x) which(test[,1]==x))
cbind(probe_names, test[indices,2])
probe_to_gene <- cbind(probe_names, test[indices,2])
View(probe_to_gene)
probe_to_gene <- cbind(probe_names, test[indices,2])
names(probe_to_gene)
names(probe_to_gene) <- c("probe", "gene")
probe_to_gene <- data.frame(cbind(probe_names, test[indices,2]))
names(probe_to_gene) <- c("probe", "gene")
View(probe_to_gene)
indices
test[indices,2]
probe_to_gene <- data.frame(cbind(probe_names, unlist(test[,2])[indices]))
names(probe_to_gene) <- c("probe", "gene")
test[,2]
test[,2] <- as.character(test[,2])
indices <- sapply(probe_names, function(x) which(test[,1]==x))
indices <- sapply(probe_names, function(x) which(test[,1]==x))
probe_to_gene <- data.frame(cbind(probe_names, unlist(test[,2])[indices]))
names(probe_to_gene) <- c("probe", "gene")
dim(probe_to_gene)
unique(probe_to_gene[,2])
as.character(unique(probe_to_gene[,2]))
length(as.character(unique(probe_to_gene[,2])))
dim(probe_to_gene)
length(as.character(unique(probe_to_gene[,2])))
length(as.character(unique(probe_to_gene[,2]))) - dim(probe_to_gene)[1]
abs(length(as.character(unique(probe_to_gene[,2]))) - dim(probe_to_gene)[1])
abs(length(as.character(unique(probe_to_gene[,2]))) - dim(probe_to_gene)[1])
table(probe_to_gene)
table(probe_to_gene[,2])
which(table(probe_to_gene[,2])>1)
names(which(table(probe_to_gene[,2])>1))
duplicate_genes <- names(which(table(probe_to_gene[,2])>1))
duplicate_genes
probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),]
library(dplyr)
probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),] %>% arrange(gene)
the_duplicate_rows <- probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),] %>% arrange(gene)
head(the_duplicate_rows)
the_duplicate_rows <- probe_to_gene[which(probe_to_gene[,2] %in% duplicate_genes),] %>% arrange(gene)
head(the_duplicate_rows)
duplicate_genes <- names(which(table(probe_to_gene[,2])>1))
duplicate_genes
the_duplicate_rows
View(the_duplicate_rows)
table(the_duplicate_rows[,2])
table(the_duplicate_rows$gene)
table(as.character(the_duplicate_rows$gene))
the_duplicate_rows[,1]
as.character(the_duplicate_rows[,1])
which(names(subset) %in% as.character(the_duplicate_rows[,1]))
names(subset)
which(probe_names %in% as.character(the_duplicate_rows[,1]))
which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
col_ix <- which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
col_ix
# col_ix <- which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
# col_ix
unique(the_duplicate_rows[,1])[1]
k <- 1
as.character(unique(the_duplicate_rows[,1])[k])
as.character(unique(the_duplicate_rows[,2])[k])
which(probe_names == as.character(unique(the_duplicate_rows[,2])[k]))
k_gene <- as.character(unique(the_duplicate_rows[,2])[k])
k_gene
which(probe_names == k_gene)
probe_names
which(the_duplicate_rows[,2] == k_gene)
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),]
which(the_duplicate_rows[,2] == k_gene)
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),]
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1]
unlist(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1])
as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1])
as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene), 1])
k_probes <- as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene), 1])
which(probe_names %in% k_probes)
k_cols <- which(probe_names %in% k_probes)
k_cols <- which(probe_names %in% k_probes) + 4
subset[,k_cols]
subset[,k_cols] %>% mutate(difference=X1557418_at-X1557419_a_at)
subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2)
subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2,
diff=X1557419_a_at-X1557418_at)
compare <- subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2,
diff=X1557419_a_at-X1557418_at)
compare
compare$diff
mean(compare$diff)
hist(compare$diff)
avg_genes <- list.files("../../data/genbank/avg-genes/")
avg_genes
head(avg_genes)
file <- avg_genes[1]
file
setwd("~/GitHub/endometriosis/code/espejo")
avg_genes <- list.files("../../data/genbank/avg-genes/", full.names=TRUE)
head(avg_genes)
avg_genes <- list.files("../../data/genbank/avg-genes", full.names=TRUE)
head(avg_genes)
avg_gene_df <- c()
file
file <- avg_genes[1]
read.csv(file)
read.csv(file)[,-1]
this_file[,ncol(this_file)]
this_file <- read.csv(file)[,-1]
this_file[,ncol(this_file)]
this_file <- data.frame(read.csv(file)[,-1])
this_file[,ncol(this_file)]
this_file
this_file[,ncol(this_file)]
c(gene_name, this_file[,ncol(this_file)])
gene_name <- names(this_file)[ncol(this_file)]
c(gene_name, this_file[,ncol(this_file)])
list(gene_name, this_file[,ncol(this_file)])
avg_gene_df <- list(avg_gene_df, list(gene_name, this_file[,ncol(this_file)]))
avg_gene_df
avg_gene_df <- c()
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_df <- list(avg_gene_df, list(gene_name, this_file[,ncol(this_file)]))
}
avg_gene_df
avg_gene_df <- c()
i <- 1
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_df[[i]] <- list(gene_name, this_file[,ncol(this_file)])
i = i + 1
}
avg_gene_df
avg_gene_df[[1]]
avg_gene_df[[1]]
avg_gene_list <- c()
i <- 1
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_list[[i]] <- list(gene_name, this_file[,ncol(this_file)])
i = i + 1
}
avg_gene_df <- c()
avg_gene_df[,1] <- avg_gene_list[[1]][2]
avg_gene_list[[1]][2]
avg_gene_df <- data.frame()
avg_gene_df[,1] <- unlist(avg_gene_list[[1]][2])
avg_gene_df <- data.frame()
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[1]][2]))
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[1]][2])
avg_gene_df <- data.frame()
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[1]][2])
avg_gene_df <- data.frame(avg_gene_list[[1]][2])
avg_gene_df
names(avg_gene_df) <- avg_gene_list[[1]][1]
avg_gene_df
for (k in 2:length(avg_gene_list)) {
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[k]][2])
names(avg_gene_df)[k] <- avg_gene_list[[k]][1]
}
View(avg_gene_df)
write.csv(avg_gene_df, "../../data/genbank/duplicate_genes.csv")
all_cuts <- list.files("../../data/genbank/removed-controls", full.names=TRUE)
all_cuts
summary <- read.csv("../../data/genbank/gene_summary.csv")
summary <- read.csv("../../data/genbank/gene_summary.csv", row.names=NULL)
summary
summary <- read.csv("../../data/genbank/gene_summary.csv", row.names=NULL)[,-1]
head(summary)
head(all_cuts)
head(summary)
summary[1,]
summary[1,]$file
as.character(summary[1,]$file)
read.csv(as.character(summary[1,]$file))
some_cut <- read.csv(as.character(summary[1,]$file))[,-1]
head(some_cut)
head(some_cut)
summary[1,]
summary[1,]$ix
some_cut[,summary[1,]$ix]
summary
names(some_cut)[summary[1,]$ix]
gsub("X", "", names(some_cut)[summary[1,]$ix])
some_cut[1,]
some_cut[,summary[1,]$ix]
gsub("X", "", names(some_cut)[summary[1,]$ix])
some_cut[1,]
gsub("X", "", names(summary)[summary[1,]$ix])
gsub("X", "", names(some_cut)[summary[1,]$ix])
summary
summary[1,]
summary[1,]$probe
as.character(summary[1,]$probe)
gsub("X", "", names(some_cut)[summary[1,]$ix])
as.character(summary[1,]$probe) == gsub("X", "", names(some_cut)[summary[1,]$ix])
gsub("X", "", names(some_cut)[summary[1,]$ix])
as.character(summary[1,]$probe)
as.character(summary[1,]$probe) == gsub("X", "", names(some_cut)[(summary[1,]$ix)+4])
some_cut[,(summary[1,]$ix+4)]
as.character(summary[1,]$probe) == gsub("X", "", names(some_cut)[(summary[1,]$ix)+4])
some_cut[,(summary[1,]$ix+4)]
FUCK <- 2
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
FUCK <- 1
FUCK <- 1
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
FUCK <- 4
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
FUCK <- 1
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
summary
summary[which(summary$ix>1),]
summary$ix>1
summary[which(summary$ix>1),]
summary[which(summary$freq>1),]
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
as.character(rows_to_iterate[FUCK,]$probe) == gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
as.character(rows_to_iterate[FUCK,]$probe)
gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
some_cut[,(rows_to_iterate[FUCK,]$ix+4)]
some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
dim(some_cut)
test <- some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
dim(test)
dim(some_cut)
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
FUCK <- 1
as.character(rows_to_iterate[FUCK,]$probe) == gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
test <- some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
test
test
rows_to_iterate
rows_to_iterate[FUCK,]$file
as.character(rows_to_iterate[FUCK,]$file)
gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file)
gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
as.character(rows_to_iterate[FUCK,]$file)
gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
FUCK <- 1
new_loc <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
new_loc
some_cut <- read.csv(new_loc)[,-1]
head(some_cut)
summary[1,]
new_loc <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
some_cut <- read.csv(new_loc)[,-1]
head(some_cut)
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
as.character(rows_to_iterate[FUCK,]$probe) == gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
test <- some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
test
c(dim(some_cut), dim(test))
rbind(dim(some_cut), dim(test))
rows_to_iterate$file
unique(rows_to_iterate$file)
k <- 1
row_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]
rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]
rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
read.csv(as.character(rows_to_iterate$file[k]))
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
read.csv(as.character(rows_to_iterate$file[k]))
this_cute <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
this_cut  <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
this_cut  <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
s <- dim(this_cut)
this_cut  <- this_cut[,-to_remove]
e <- dim(this_cut)
s
e
s
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
this_cut  <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
this_cut  <- this_cut[,-to_remove]
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
new_loc   <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate$file[k]))
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
new_loc
this_cut  <- read.csv(new_loc)[,-1]
this_cut
this_cut  <- this_cut[,-to_remove]
unique(rows_to_iterate$file)
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
source("http://bioconductor.org/biocLite.R")
library(affy)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affy", version = "3.8")
library(affy)
?rma
?ExpressionSet
library(Biobase)
full_data <- "../../data/genbank/full_data.csv"
full_data <- read.csv(full_data)[,-1]
full_data <- read.csv(full_data)[,-1]
full_data <- "../../data/genbank/full_data.csv"
full_data <- read.csv(full_data)[,-1])
full_data <- read.csv(full_data)[,-1]
meta  <- full_data[,1:4]
meta
assay <- full_data[,-c(1:4)]
dim(assay)
expression_set <- ExpressionSet(assayData=as.matrix(assay))
expression_set
expression_set <- ExpressionSet(assayData=as.matrix(assay), featureData=meta)
expression_set <- ExpressionSet(assayData=as.matrix(assay))
expression_set
?AnnotatedDataFrame
meta
metadata <- data.frame(labelDescription=
+ c("Patient gender",
+ "Case/control status",
+ "Tumor progress on XYZ scale"),
+ row.names=c("gender", "type", "score"))
metadata <- data.frame(labelDescription=c("Patient gender","Case/control status","Tumor progress on XYZ scale"),row.names=c("gender", "type", "score"))
metadata
meta
metadata <- data.frame(labelDescription=c("Sample ID number","Sampled tissue","Whether or not patient has endometriosis", "Severity of endometriosis or non-endometriosis"),row.names=c("sample", "tissue", "endometriosis", "severity"))
metadata
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
expression_set <- ExpressionSet(assayData=as.matrix(assay), phenoData=pheno_data)
pheno_data
metadata
meta
assay
assay
assay <- as.matrix(assay)
assay
View(assay)
assay[,1]
row.names(assay) <- meta[,1]
expression_set <- ExpressionSet(assayData=assay, phenoData=pheno_data)
sampleNames(pheno_data)
meta <- as.matrix(meta)
row.names(meta) <- meta[,1]
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
sampleNames(pheno_data)
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
full_data <- "../../data/genbank/full_data.csv"
full_data <- read.csv(full_data)[,-1]
meta  <- full_data[,1:4]
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
meta  <- full_data[,1:4]
meta
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
pheno_data
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
pheno_data
meta  <- full_data[,1:4]
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
sampleNames(pheno_data)
row.names(meta)
row.names(meta) <- meta[,1]
meta
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
pheno_data
sampleNames(pheno_data)
# sampleNames(pheno_data)
expression_set <- ExpressionSet(assayData=assay, phenoData=pheno_data)
sampleNames(assay)
expression_set <- ExpressionSet(assayData=assay, phenoData=pheno_data)
?protocolData
expression_set <- ExpressionSet(assayData=assay)
expression_set
sampleNameS(expression_set)
expression_set
try <- rma(expression_set)
expression_set <- ExpressionSet(assayData=assay, probNames=names(assay))
expression_set
try <- rma(expression_set)
