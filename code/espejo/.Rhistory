names(subset)
which(probe_names %in% as.character(the_duplicate_rows[,1]))
which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
col_ix <- which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
col_ix
# col_ix <- which(probe_names %in% as.character(the_duplicate_rows[,1])) + 4
# col_ix
unique(the_duplicate_rows[,1])[1]
k <- 1
as.character(unique(the_duplicate_rows[,1])[k])
as.character(unique(the_duplicate_rows[,2])[k])
which(probe_names == as.character(unique(the_duplicate_rows[,2])[k]))
k_gene <- as.character(unique(the_duplicate_rows[,2])[k])
k_gene
which(probe_names == k_gene)
probe_names
which(the_duplicate_rows[,2] == k_gene)
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),]
which(the_duplicate_rows[,2] == k_gene)
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),]
the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1]
unlist(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1])
as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene),1])
as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene), 1])
k_probes <- as.character(the_duplicate_rows[which(the_duplicate_rows[,2] == k_gene), 1])
which(probe_names %in% k_probes)
k_cols <- which(probe_names %in% k_probes)
k_cols <- which(probe_names %in% k_probes) + 4
subset[,k_cols]
subset[,k_cols] %>% mutate(difference=X1557418_at-X1557419_a_at)
subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2)
subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2,
diff=X1557419_a_at-X1557418_at)
compare <- subset[,k_cols] %>% mutate(mean=(X1557418_at+X1557419_a_at)/2,
diff=X1557419_a_at-X1557418_at)
compare
compare$diff
mean(compare$diff)
hist(compare$diff)
avg_genes <- list.files("../../data/genbank/avg-genes/")
avg_genes
head(avg_genes)
file <- avg_genes[1]
file
setwd("~/GitHub/endometriosis/code/espejo")
avg_genes <- list.files("../../data/genbank/avg-genes/", full.names=TRUE)
head(avg_genes)
avg_genes <- list.files("../../data/genbank/avg-genes", full.names=TRUE)
head(avg_genes)
avg_gene_df <- c()
file
file <- avg_genes[1]
read.csv(file)
read.csv(file)[,-1]
this_file[,ncol(this_file)]
this_file <- read.csv(file)[,-1]
this_file[,ncol(this_file)]
this_file <- data.frame(read.csv(file)[,-1])
this_file[,ncol(this_file)]
this_file
this_file[,ncol(this_file)]
c(gene_name, this_file[,ncol(this_file)])
gene_name <- names(this_file)[ncol(this_file)]
c(gene_name, this_file[,ncol(this_file)])
list(gene_name, this_file[,ncol(this_file)])
avg_gene_df <- list(avg_gene_df, list(gene_name, this_file[,ncol(this_file)]))
avg_gene_df
avg_gene_df <- c()
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_df <- list(avg_gene_df, list(gene_name, this_file[,ncol(this_file)]))
}
avg_gene_df
avg_gene_df <- c()
i <- 1
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_df[[i]] <- list(gene_name, this_file[,ncol(this_file)])
i = i + 1
}
avg_gene_df
avg_gene_df[[1]]
avg_gene_df[[1]]
avg_gene_list <- c()
i <- 1
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_list[[i]] <- list(gene_name, this_file[,ncol(this_file)])
i = i + 1
}
avg_gene_df <- c()
avg_gene_df[,1] <- avg_gene_list[[1]][2]
avg_gene_list[[1]][2]
avg_gene_df <- data.frame()
avg_gene_df[,1] <- unlist(avg_gene_list[[1]][2])
avg_gene_df <- data.frame()
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[1]][2]))
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[1]][2])
avg_gene_df <- data.frame()
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[1]][2])
avg_gene_df <- data.frame(avg_gene_list[[1]][2])
avg_gene_df
names(avg_gene_df) <- avg_gene_list[[1]][1]
avg_gene_df
for (k in 2:length(avg_gene_list)) {
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[k]][2])
names(avg_gene_df)[k] <- avg_gene_list[[k]][1]
}
View(avg_gene_df)
write.csv(avg_gene_df, "../../data/genbank/duplicate_genes.csv")
all_cuts <- list.files("../../data/genbank/removed-controls", full.names=TRUE)
all_cuts
summary <- read.csv("../../data/genbank/gene_summary.csv")
summary <- read.csv("../../data/genbank/gene_summary.csv", row.names=NULL)
summary
summary <- read.csv("../../data/genbank/gene_summary.csv", row.names=NULL)[,-1]
head(summary)
head(all_cuts)
head(summary)
summary[1,]
summary[1,]$file
as.character(summary[1,]$file)
read.csv(as.character(summary[1,]$file))
some_cut <- read.csv(as.character(summary[1,]$file))[,-1]
head(some_cut)
head(some_cut)
summary[1,]
summary[1,]$ix
some_cut[,summary[1,]$ix]
summary
names(some_cut)[summary[1,]$ix]
gsub("X", "", names(some_cut)[summary[1,]$ix])
some_cut[1,]
some_cut[,summary[1,]$ix]
gsub("X", "", names(some_cut)[summary[1,]$ix])
some_cut[1,]
gsub("X", "", names(summary)[summary[1,]$ix])
gsub("X", "", names(some_cut)[summary[1,]$ix])
summary
summary[1,]
summary[1,]$probe
as.character(summary[1,]$probe)
gsub("X", "", names(some_cut)[summary[1,]$ix])
as.character(summary[1,]$probe) == gsub("X", "", names(some_cut)[summary[1,]$ix])
gsub("X", "", names(some_cut)[summary[1,]$ix])
as.character(summary[1,]$probe)
as.character(summary[1,]$probe) == gsub("X", "", names(some_cut)[(summary[1,]$ix)+4])
some_cut[,(summary[1,]$ix+4)]
as.character(summary[1,]$probe) == gsub("X", "", names(some_cut)[(summary[1,]$ix)+4])
some_cut[,(summary[1,]$ix+4)]
FUCK <- 2
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
FUCK <- 1
FUCK <- 1
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
FUCK <- 4
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
FUCK <- 1
as.character(summary[FUCK,]$probe) == gsub("X", "", names(some_cut)[(summary[FUCK,]$ix)+4])
some_cut[,(summary[FUCK,]$ix+4)]
summary
summary[which(summary$ix>1),]
summary$ix>1
summary[which(summary$ix>1),]
summary[which(summary$freq>1),]
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
as.character(rows_to_iterate[FUCK,]$probe) == gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
as.character(rows_to_iterate[FUCK,]$probe)
gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
some_cut[,(rows_to_iterate[FUCK,]$ix+4)]
some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
dim(some_cut)
test <- some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
dim(test)
dim(some_cut)
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
FUCK <- 1
as.character(rows_to_iterate[FUCK,]$probe) == gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
test <- some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
test
test
rows_to_iterate
rows_to_iterate[FUCK,]$file
as.character(rows_to_iterate[FUCK,]$file)
gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file)
gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
as.character(rows_to_iterate[FUCK,]$file)
gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
FUCK <- 1
new_loc <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
new_loc
some_cut <- read.csv(new_loc)[,-1]
head(some_cut)
summary[1,]
new_loc <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate[FUCK,]$file))
some_cut <- read.csv(new_loc)[,-1]
head(some_cut)
rows_to_iterate <- summary[which(summary$freq>1),]
head(rows_to_iterate)
as.character(rows_to_iterate[FUCK,]$probe) == gsub("X", "", names(some_cut)[(rows_to_iterate[FUCK,]$ix)+4])
test <- some_cut[,-(rows_to_iterate[FUCK,]$ix+4)]
test
c(dim(some_cut), dim(test))
rbind(dim(some_cut), dim(test))
rows_to_iterate$file
unique(rows_to_iterate$file)
k <- 1
row_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]
rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]
rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
read.csv(as.character(rows_to_iterate$file[k]))
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
read.csv(as.character(rows_to_iterate$file[k]))
this_cute <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
this_cut  <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
this_cut  <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
s <- dim(this_cut)
this_cut  <- this_cut[,-to_remove]
e <- dim(this_cut)
s
e
s
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
this_cut  <- read.csv(as.character(rows_to_iterate$file[k]))[,-1]
this_cut  <- this_cut[,-to_remove]
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
new_loc   <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate$file[k]))
k <- 1
to_remove <- rows_to_iterate[which(rows_to_iterate$file==rows_to_iterate$file[k]),]$ix+4
new_loc
this_cut  <- read.csv(new_loc)[,-1]
this_cut
this_cut  <- this_cut[,-to_remove]
unique(rows_to_iterate$file)
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("removed-controls", "i-am-frustrated", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
source("http://bioconductor.org/biocLite.R")
library(affy)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affy", version = "3.8")
library(affy)
?rma
?ExpressionSet
library(Biobase)
full_data <- "../../data/genbank/full_data.csv"
full_data <- read.csv(full_data)[,-1]
full_data <- read.csv(full_data)[,-1]
full_data <- "../../data/genbank/full_data.csv"
full_data <- read.csv(full_data)[,-1])
full_data <- read.csv(full_data)[,-1]
meta  <- full_data[,1:4]
meta
assay <- full_data[,-c(1:4)]
dim(assay)
expression_set <- ExpressionSet(assayData=as.matrix(assay))
expression_set
expression_set <- ExpressionSet(assayData=as.matrix(assay), featureData=meta)
expression_set <- ExpressionSet(assayData=as.matrix(assay))
expression_set
?AnnotatedDataFrame
meta
metadata <- data.frame(labelDescription=
+ c("Patient gender",
+ "Case/control status",
+ "Tumor progress on XYZ scale"),
+ row.names=c("gender", "type", "score"))
metadata <- data.frame(labelDescription=c("Patient gender","Case/control status","Tumor progress on XYZ scale"),row.names=c("gender", "type", "score"))
metadata
meta
metadata <- data.frame(labelDescription=c("Sample ID number","Sampled tissue","Whether or not patient has endometriosis", "Severity of endometriosis or non-endometriosis"),row.names=c("sample", "tissue", "endometriosis", "severity"))
metadata
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
expression_set <- ExpressionSet(assayData=as.matrix(assay), phenoData=pheno_data)
pheno_data
metadata
meta
assay
assay
assay <- as.matrix(assay)
assay
View(assay)
assay[,1]
row.names(assay) <- meta[,1]
expression_set <- ExpressionSet(assayData=assay, phenoData=pheno_data)
sampleNames(pheno_data)
meta <- as.matrix(meta)
row.names(meta) <- meta[,1]
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
sampleNames(pheno_data)
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
full_data <- "../../data/genbank/full_data.csv"
full_data <- read.csv(full_data)[,-1]
meta  <- full_data[,1:4]
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
meta  <- full_data[,1:4]
meta
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
pheno_data
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
pheno_data
meta  <- full_data[,1:4]
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
sampleNames(pheno_data)
row.names(meta)
row.names(meta) <- meta[,1]
meta
pheno_data <-new("AnnotatedDataFrame", data=meta, varMetadata=metadata)
pheno_data
sampleNames(pheno_data)
# sampleNames(pheno_data)
expression_set <- ExpressionSet(assayData=assay, phenoData=pheno_data)
sampleNames(assay)
expression_set <- ExpressionSet(assayData=assay, phenoData=pheno_data)
?protocolData
expression_set <- ExpressionSet(assayData=assay)
expression_set
sampleNameS(expression_set)
expression_set
try <- rma(expression_set)
expression_set <- ExpressionSet(assayData=assay, probNames=names(assay))
expression_set
try <- rma(expression_set)
all_cuts <- list.files("../../data/genbank/02-removed-controls", full.names=TRUE)
all_cuts
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install("hgu133plus2.db", version = "3.8")
library("hgu133plus2.db")
length(unlist(contents(hgu133plus2SYMBOL)))
length(names(contents(hgu133plus2SYMBOL)))
get_genes <- function(subset_path) {
require("hgu133plus2.db")
subset <- read.csv(subset_path)[,-1]
probe_names <- colnames(subset)[-c(1:4)]
probe_names <- gsub("^X", "", probe_names)
test <- cbind(names(contents(hgu133plus2SYMBOL)), unlist(contents(hgu133plus2SYMBOL)))
test <- data.frame(test)
rownames(test) <- 1:nrow(test)
test[,2] <- as.character(test[,2])
indices <- lapply(probe_names, function(x) which(test[,1]==x))
indices <- as.numeric(as.character(indices))
probe_to_gene <- data.frame(cbind(probe_names, unlist(test[,2])[indices], 1:length(indices)))
names(probe_to_gene) <- c("probe", "gene", "ix")
probe_to_gene$gene <- ifelse(is.na(probe_to_gene$gene), paste0("probe_",as.character(probe_to_gene$probe)), as.character(probe_to_gene$gene))
probe_to_gene
}
main <- function(subset_path) {
gene_df <- get_genes(subset_path)
genes   <- data.frame(table(gene_df[,2]))
names(genes) <- c("gene", "freq")
genes$gene <- as.character(genes$gene)
gene_df <- merge(gene_df, genes, by="gene")
gene_df <- data.frame(cbind(gene_df, file=subset_path))
# gene_df <- cbind(gene_names=row.names(genes), genes)
# row.names(genes) <- 1:nrow(genes)
# names(genes)[2] <- "count"
gene_df
}
counts <- lapply(all_cuts, main)
head(counts[[1]])
sum(unlist(lapply(counts, nrow)))
this_csv <- "../../data/genbank/gene_summary.csv"
write.table(counts[[1]], this_csv, sep=",", col.names=TRUE, append=TRUE)
for (k in 2:length(counts)) {
write.table(counts[[k]], this_csv, sep=",", col.names=FALSE, append=TRUE)
}
this_csv <- "../../data/genbank/00-helper-files/gene-summary.csv"
write.table(counts[[1]], this_csv, sep=",", col.names=TRUE, append=TRUE)
for (k in 2:length(counts)) {
write.table(counts[[k]], this_csv, sep=",", col.names=FALSE, append=TRUE)
}
all_genes <- read.csv(this_csv, row.names=NULL)[,-1]
nrow(all_genes)
all_genes <- read.csv(this_csv, row.names=NULL)[,-1]
all_genes <- all_genes %>% arrange(gene)
head(all_genes)
dim(all_genes)
length(unique(all_genes$gene))
duplicate_all_genes <- names(which(table(all_genes[,1])>1))
duplicate_all_rows  <- all_genes[which(all_genes[,1] %in% duplicate_all_genes),] %>% arrange(gene)
head(duplicate_all_rows)
library(dplyr)
duplicate_all_genes <- names(which(table(all_genes[,1])>1))
duplicate_all_rows  <- all_genes[which(all_genes[,1] %in% duplicate_all_genes),] %>% arrange(gene)
head(duplicate_all_rows)
for (k in 1:length(unique(duplicate_all_rows$gene))) {
ix <- which(duplicate_all_rows$gene == unique(duplicate_all_rows$gene)[k])
gene_df <- duplicate_all_rows[ix,]
measurements_same_gene <- subset[,1:4]
for (j in 1:nrow(gene_df)) {
probe_name <- as.character(gene_df$probe[j])
this_probe <- read.csv(as.character(gene_df$file[j]))[,-1][,(gene_df$ix[j]+4)]
measurements_same_gene <- cbind(measurements_same_gene, this_probe)
names(measurements_same_gene)[j+4] <- paste0("p", probe_name)
}
measurements_same_gene <- cbind(measurements_same_gene, apply(measurements_same_gene[,5:(4+j)], 1, sum) / nrow(gene_df))
names(measurements_same_gene)[5+nrow(gene_df)] <- as.character(gene_df$gene[1])
file_name <- paste0("../../data/genbank/03-avg-genes/", as.character(gene_df$gene[1]), ".csv")
write.csv(measurements_same_gene, file_name)
}
subset <- read.csv("../../data/genbank/02-removed-controls/cut_1.csv")[,-1]
for (k in 1:length(unique(duplicate_all_rows$gene))) {
ix <- which(duplicate_all_rows$gene == unique(duplicate_all_rows$gene)[k])
gene_df <- duplicate_all_rows[ix,]
measurements_same_gene <- subset[,1:4]
for (j in 1:nrow(gene_df)) {
probe_name <- as.character(gene_df$probe[j])
this_probe <- read.csv(as.character(gene_df$file[j]))[,-1][,(gene_df$ix[j]+4)]
measurements_same_gene <- cbind(measurements_same_gene, this_probe)
names(measurements_same_gene)[j+4] <- paste0("p", probe_name)
}
measurements_same_gene <- cbind(measurements_same_gene, apply(measurements_same_gene[,5:(4+j)], 1, sum) / nrow(gene_df))
names(measurements_same_gene)[5+nrow(gene_df)] <- as.character(gene_df$gene[1])
file_name <- paste0("../../data/genbank/03-avg-genes/", as.character(gene_df$gene[1]), ".csv")
write.csv(measurements_same_gene, file_name)
}
avg_genes <- list.files("../../data/genbank/03-avg-genes", full.names=TRUE)
head(avg_genes)
avg_gene_list <- c()
i <- 1
for (file in avg_genes) {
this_file <- read.csv(file)[,-1]
gene_name <- names(this_file)[ncol(this_file)]
avg_gene_list[[i]] <- list(gene_name, this_file[,ncol(this_file)])
i = i + 1
}
avg_gene_df <- data.frame(avg_gene_list[[1]][2])
names(avg_gene_df) <- avg_gene_list[[1]][1]
for (k in 2:length(avg_gene_list)) {
avg_gene_df <- cbind(avg_gene_df, avg_gene_list[[k]][2])
names(avg_gene_df)[k] <- avg_gene_list[[k]][1]
}
write.csv(avg_gene_df, "../../data/genbank/00-helper-files/duplicate_genes.csv")
summary <- read.csv("../../data/genbank/00-helper-files/gene_summary.csv", row.names=NULL)[,-1]
head(summary)
summary <- read.csv("../../data/genbank/00-helper-files/gene_summary.csv", row.names=NULL)[,-1]
summary <- read.csv("../../../data/genbank/00-helper-files/gene_summary.csv", row.names=NULL)[,-1]
summary <- read.csv("../../data/genbank/00-helper-files/gene-summary.csv", row.names=NULL)[,-1]
head(summary)
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("02-removed-controls", "04-removed-duplicates", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("02-removed-controls", "04-removed-duplicates", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
rows_to_iterate <- summary[which(summary$freq>1),]
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("02-removed-controls", "04-removed-duplicates", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
rows_to_iterate <- summary[which(summary$freq>1),]
rows_to_iterate
rows_to_iterate <- summary[which(summary$freq>1),]
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("02-removed-controls", "04-removed-duplicates", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
rows_to_iterate <- summary[which(summary$freq>1),]
for (k in 1:length(unique(rows_to_iterate$file))) {
to_remove <- rows_to_iterate[which(rows_to_iterate$file==unique(rows_to_iterate$file)[k]),]$ix+4
new_loc   <- gsub("02-removed-controls", "04-removed-duplicates", as.character(rows_to_iterate$file[k]))
this_cut  <- read.csv(new_loc)[,-1]
this_cut  <- this_cut[,-to_remove]
write.csv(this_cut, new_loc)
}
removed_controls_foreal <- list.files("../../data/genbank/04-removed-duplicates", full.names=TRUE)
# first_cut <- read.csv(removed_controls_foreal[1])[,-c(1:5)]
# names(first_cut) <- get_genes(removed_controls_foreal[1])$gene
full_data <- read.csv(removed_controls_foreal[1])[,c(2:5)]
# length(get_genes(removed_controls_foreal[1])$gene)
# length(names(first_cut))
for (k in 1:length(removed_controls_foreal)) {
this_cut <- read.csv(removed_controls_foreal[k])[,-c(1:5)]
names(this_cut) <- get_genes(removed_controls_foreal[k])$gene
full_data <- cbind(full_data, this_cut)
}
write.csv(full_data, "../../data/genbank/full_data.csv")
